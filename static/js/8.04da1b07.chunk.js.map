{"version":3,"sources":["views/views-admin/dashboard/dashboard.js","views/views-admin/workouts/workout.js","views/views-admin/workouts/workouts.js","views/views-admin/workouts/index.js","views/views-admin/weeks/week.js","views/views-admin/weeks/weeks.js","views/views-admin/weeks/index.js","views/views-admin/drills/drill.js","views/views-admin/drills/drills.js","views/views-admin/drills/index.js","views/views-admin/daily-challenges/challenge.js","views/views-admin/daily-challenges/challenges.js","views/views-admin/daily-challenges/index.js","components/top-nav/admin-nav.js","views/views-admin/index.js"],"names":["Dashboard","useSubscription","Queries","weeks","subscribeAll","data","loading","_","get","sort","a","b","parseISO","week_start","Pane","className","display","marginBottom","Heading","size","color","height","elevation","background","padding","upperCase","WorkoutTypeChart","memo","props","workoutTypes","constants","typeList","lastTenWeekWeightedCounts","compact","map","rangeRight","i","end","start","loopData","slice","reduce","total","curr","type","find","includes","push","value","label","lastTenWeekRanks","week","weekAsSortedArrayPairs","toPairs","graphData","id","isEmpty","margin","top","right","bottom","left","colors","scheme","lineWidth","activeLineWidth","inactiveLineWidth","inactiveOpacity","pointSize","activePointSize","inactivePointSize","pointColor","theme","pointBorderWidth","activePointBorderWidth","pointBorderColor","from","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","endLabelPadding","isEqual","WorkoutPopularityChart","workoutList","title","filter","workout","last","EnergySystemsChart","keys","uniq","keysObject","days","workoutTypesObject","system","offsetType","order","fillOpacity","legends","anchor","direction","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style","Workout","workouts","subscribe","variables","useMutation","deleteWorkout","refetchQueries","query","getAll","awaitRefetchQueries","removeWorkout","deleteVersion","getOne","removeVersion","openPanel","useContext","Services","UI","useState","selectedVersion","setSelectedVersion","intensityOptions","history","useHistory","typesValue","intensityValue","versions","useEffect","version","body","stats","drills","intensity","_handleWorkoutDelete","_handleVersionDelete","_handleVersionAdd","justifyContent","Button","marginLeft","iconBefore","onClick","panel","workoutId","emit","flexDirection","alignItems","marginRight","flex","Badge","Text","Tablist","version_num","Tab","key","onSelect","isSelected","aria-controls","split","line","Paragraph","drill","to","intent","appearance","WorkoutMinutesSplit","beginner","intermediate","advanced","innerPadding","layout","groupMode","justify","isInteractive","enableGridY","dataFrom","translateY","itemDirection","Workouts","useQuery","intensityLabel","typeLabel","width","WorkoutsIndex","useParams","_workoutView","Boolean","Week","dailyChallenges","challengesData","challengesLoading","updateWeek","updated_at","weekId","challenge","challenges","challengeSelectOptions","e","_handleDownload","format","replace","initialValues","isNull","onSubmit","console","log","_challenge","error","enableReinitialize","values","handleSubmit","handleChange","SelectField","name","onChange","day","workoutTitle","workoutVersion","workoutVersionId","paddingLeft","paddingBottom","IconButton","icon","paddingRight","preventDefault","daily_challenge","doc","Document","children","DocXParagraph","text","heading","HeadingLevel","HEADING_1","forEach","HEADING_3","spacing","before","drillsText","url","bullet","level","HEADING_4","addSection","Packer","toBlob","then","blob","save","EnergySystemSplit","allEnergySystems","workoutsEnergySystemMap","capitalize","nth","el","colorBy","WeeksMinutesSplit","now","Date","Weeks","age","differenceInCalendarDays","WeeksIndex","_weekView","Drill","description","embed_url","trim","substring","workoutsCount","Link","href","target","rel","src","frameBorder","allow","allowFullScreen","Drills","DrillsIndex","_drillView","Challenge","weeksCount","Challenges","daily_challenges","AdminNav","pathname","useLocation","Auth","isAuthenticated","isAuthenticating","authUser","signOut","route","startsWith","Avatar","first_name","isLoading","Admin","path"],"mappings":"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","file":"static/js/8.04da1b07.chunk.js","sourcesContent":["\n// deps\nimport React, { memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSubscription } from \"@apollo/react-hooks\";\nimport { ResponsiveBump } from \"@nivo/bump\";\nimport { ResponsiveStream } from \"@nivo/stream\";\nimport { parseISO } from \"date-fns\";\nimport _ from \"lodash\";\n\n// app\nimport { Pane, Heading } from \"evergreen-ui\";\nimport { Queries, constants, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Dashboard / Dashboard\n//\n\n\nexport default function Dashboard () {\n\tconst { data, loading } = useSubscription( Queries.weeks.subscribeAll );    \n\tconst weeks = [ ..._.get( data, \"weeks\", []) ].sort(( a, b ) => parseISO( a.week_start ) - parseISO( b.week_start ));\n\n\tif ( loading ) return <Loading />;\n\n\treturn (\n\t\t<Pane className=\"v-dashboard\">\n\t\t\t<Pane display=\"flex\" marginBottom={ 48 }>\n\t\t\t\t<Heading size={ 800 } color=\"#1070CA\">Dashboard</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane height={ 450 } elevation={ 1 } background=\"white\" padding={ 24 } marginBottom={ 24 }>\n\t\t\t\t<Heading size={ 300 }>{ _.upperCase( \"Workout popularity over time\" ) }</Heading>\n\t\t\t\t<WorkoutPopularityChart weeks={ weeks } />\n\t\t\t</Pane>\n\t\t\t<Pane height={ 300 } elevation={ 1 } background=\"white\" padding={ 24 } marginBottom={ 24 }>\n\t\t\t\t<Heading size={ 300 }>{ _.upperCase( \"Workout types over time\" ) }</Heading>\n\t\t\t\t<WorkoutTypeChart weeks={ weeks } />\n\t\t\t</Pane>\n\t\t\t<Pane height={ 300 } elevation={ 1 } background=\"white\" padding={ 24 } marginBottom={ 24 }>\n\t\t\t\t<Heading size={ 300 }>{ _.upperCase( \"Energy systems over time\" ) }</Heading>\n\t\t\t\t<EnergySystemsChart weeks={ weeks } />\n\t\t\t</Pane>\n\t\t</Pane>\n\t);\n}\n\n\n\nconst WorkoutTypeChart = memo( function WorkoutPopularityChart ( props ) {\n\tconst { weeks } = props;\n\tconst { workoutTypes } = constants;\n\tconst typeList = [];\n\n\tconst lastTenWeekWeightedCounts = _.compact( _.map( _.rangeRight( 0, 10 ), i => {\n\t\tconst end = _.size( weeks ) - i;\n\t\tif ( end < 0 ) return false;\n\n\t\tconst start = end - 10 < 0 ? 0 : end - 10;\n\t\tconst loopData = _.slice( weeks, start, end );\n\n\t\treturn _.reduce( loopData, ( total, curr, i ) => {\n\t\t\treturn _.reduce( _.get( curr, \"days\", []), ( total, curr ) => {\n\t\t\t\tconst type = _.get( _.find( workoutTypes, [ \"value\", _.get( curr, \"workout.workout.type\" ) ]), \"label\" );\n\t\t\t\tif ( !type ) return total;\n\t\t\t\tif ( !typeList.includes( type )) typeList.push( type );\n\t\t\t\tconst value = _.get( total, [ \"data\", type ], 0 ) + ( 1 - (( 10 - i ) / 11 ));\n\t\t\t\treturn { ...total, data: { ...total.data, [ type ]: value }};\n\t\t\t}, { ...total });\n\t\t}, { label: i, data: {}});\n\t}));\n    \n\tconst lastTenWeekRanks = _.map( lastTenWeekWeightedCounts, week => {\n\t\tconst weekAsSortedArrayPairs = _.toPairs( _.get( week, \"data\" )).sort(( a, b ) => b[ 1 ] - a[ 1 ]);\n\t\treturn { ...week, data: _.reduce( weekAsSortedArrayPairs, ( total, curr, i ) => ({ ...total, [ curr[ 0 ] ]: i + 1 }), {}) };\n\t});\n    \n\tconst graphData = _.map( typeList, type => ({\n\t\tid: type,\n\t\tdata: _.map( lastTenWeekRanks, week => ({ \"x\": _.get( week, \"label\" ), \"y\": _.get( week, [ \"data\", type ], _.size( typeList )) })),\n\t}));\n\n\tif ( _.isEmpty( graphData )) return null;\n\n\treturn (\n\t\t<ResponsiveBump\n\t\t\tdata={ graphData }\n\t\t\tmargin={{ top: 40, right: 150, bottom: 60, left: 60 }}\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tlineWidth={ 2 }\n\t\t\tactiveLineWidth={ 4 }\n\t\t\tinactiveLineWidth={ 2 }\n\t\t\tinactiveOpacity={ 0.6 }\n\t\t\tpointSize={ 5 }\n\t\t\tactivePointSize={ 10 }\n\t\t\tinactivePointSize={ 0 }\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={ 3 }\n\t\t\tactivePointBorderWidth={ 3 }\n\t\t\tpointBorderColor={{ from: \"serie.color\" }}\n\t\t\taxisTop={ null }\n\t\t\taxisRight={ null }\n\t\t\taxisBottom={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Weeks ago\",\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: 32,\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Rank\",\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t}}\n\t\t\tendLabelPadding={ 8 }\n\t\t/>\n\t);\n}, _.isEqual );\nWorkoutTypeChart.propTypes = {\n\tweeks: PropTypes.array,\n};\n\n\n\nconst WorkoutPopularityChart = memo( function WorkoutPopularityChart ( props ) {\n\tconst { weeks } = props;\n\tconst workoutList = [];\n\n\tconst lastTenWeekWeightedCounts = _.compact( _.map( _.rangeRight( 0, 10 ), i => {\n\t\tconst end = _.size( weeks ) - i;\n\t\tif ( end <= 0 ) return false;\n\n\t\tconst start = end - 10 < 0 ? 0 : end - 10;\n\t\tconst loopData = _.slice( weeks, start, end );\n\n\t\treturn _.reduce( loopData, ( total, curr, i ) => {\n\t\t\treturn _.reduce( _.get( curr, \"days\", []), ( total, curr ) => {\n\t\t\t\tconst title = _.get( curr, \"workout.workout.title\" );\n\t\t\t\tconst type = _.get( curr, \"workout.workout.type\" );\n\t\t\t\tif ( !title || type === \"recovery\" ) return total;\n\t\t\t\tif ( !workoutList.includes( title )) workoutList.push( title );\n\t\t\t\tconst value = _.get( total, [ \"data\", title ], 0 ) + ( 1 - (( 10 - i ) / 11 ));\n\t\t\t\treturn { ...total, data: { ...total.data, [ title ]: value }};\n\t\t\t}, { ...total });\n\t\t}, { label: i, data: {}});\n\t}));\n    \n\tconst lastTenWeekRanks = _.map( lastTenWeekWeightedCounts, week => {\n\t\tconst weekAsSortedArrayPairs = _.toPairs( _.get( week, \"data\" )).sort(( a, b ) => b[ 1 ] - a[ 1 ]);\n\t\treturn { ...week, data: _.reduce( weekAsSortedArrayPairs, ( total, curr, i ) => ({ ...total, [ curr[ 0 ] ]: i + 1 }), {}) };\n\t});\n    \n\tconst graphData = _.filter( _.map( workoutList, workout => ({\n\t\tid: workout,\n\t\tdata: _.map( lastTenWeekRanks, week => ({ \"x\": _.get( week, \"label\" ), \"y\": _.get( week, [ \"data\", workout ], _.size( workoutList )) })),\n\t})), ({ data }) => _.get( _.last( data ), \"x\" ) <= 12 );\n\n\tif ( _.isEmpty( graphData )) return null;\n\n\treturn (\n\t\t<ResponsiveBump\n\t\t\tdata={ graphData }\n\t\t\tmargin={{ top: 40, right: 150, bottom: 60, left: 60 }}\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tlineWidth={ 2 }\n\t\t\tactiveLineWidth={ 4 }\n\t\t\tinactiveLineWidth={ 2 }\n\t\t\tinactiveOpacity={ 0.6 }\n\t\t\tpointSize={ 5 }\n\t\t\tactivePointSize={ 10 }\n\t\t\tinactivePointSize={ 0 }\n\t\t\tpointColor={{ theme: \"background\" }}\n\t\t\tpointBorderWidth={ 3 }\n\t\t\tactivePointBorderWidth={ 3 }\n\t\t\tpointBorderColor={{ from: \"serie.color\" }}\n\t\t\taxisTop={ null }\n\t\t\taxisRight={ null }\n\t\t\taxisBottom={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Weeks ago\",\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: 32,\n\t\t\t}}\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegend: \"Rank\",\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t}}\n\t\t\tendLabelPadding={ 8 }\n\t\t/>\n\t);\n}, _.isEqual );\nWorkoutPopularityChart.propTypes = {\n\tweeks: PropTypes.array,\n};\n\n\n\nconst EnergySystemsChart = memo( function EnergySystemsChart ( props ) {\n\tconst { weeks } = props;\n\tconst { workoutTypes } = constants;\n    \n\tconst keys = _.uniq( _.map( workoutTypes, \"system\" )).sort();\n\tconst keysObject = _.reduce( keys, ( total, curr ) => ({ ...total, [ curr ]: 0 }), {});\n\n\tconst graphData = _.map( weeks, ({ days }) => {\n\t\treturn _.reduce( days, ( total, curr ) => {\n\t\t\tconst type = _.get( curr, \"workout.workout.type\" );\n\t\t\tif ( !type ) return total;\n\n\t\t\tconst workoutTypesObject = _.find( workoutTypes, [ \"value\", type ]);\n\t\t\tconst system = _.get( workoutTypesObject, \"system\", \"missing\" );\n\t\t\treturn { ...total, [ system ]: total[ system ] ? total[ system ] + 1 : 1 };\n\t\t}, { ...keysObject });\n\t});\n    \n\tif ( _.isEmpty( graphData )) return null;\n\n\treturn <ResponsiveStream\n\t\tdata={ graphData }\n\t\tkeys={ keys }\n\t\tmargin={{ top: 50, right: 110, bottom: 50, left: 60 }}\n\t\taxisTop={ null }\n\t\taxisRight={ null }\n\t\taxisBottom={ null }\n\t\taxisLeft={ null }\n\t\toffsetType=\"none\"\n\t\torder=\"none\"\n\t\t// curve=\"natural\"\n\t\tcolors={{ scheme: \"category10\" }}\n\t\tfillOpacity={ 0.85 }\n\t\tlegends={[\n\t\t\t{\n\t\t\t\tanchor: \"bottom-right\",\n\t\t\t\tdirection: \"column\",\n\t\t\t\ttranslateX: 100,\n\t\t\t\titemWidth: 80,\n\t\t\t\titemHeight: 20,\n\t\t\t\titemTextColor: \"#999999\",\n\t\t\t\tsymbolSize: 12,\n\t\t\t\tsymbolShape: \"circle\",\n\t\t\t\teffects: [\n\t\t\t\t\t{\n\t\t\t\t\t\ton: \"hover\",\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\titemTextColor: \"#000000\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t]}\n\t/>;\n}, _.isEqual );\nEnergySystemsChart.propTypes = {\n\tweeks: PropTypes.array,\n};\n","\n// deps\nimport React, { useContext, useState, useEffect, memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSubscription, useMutation } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\n// app\nimport { Pane, Badge, Button, Heading, Text, Paragraph, Tablist, Tab } from \"evergreen-ui\";\nimport { Services, Queries, Loading, constants } from \"../index\";\n\n//\n// Adultletics Admin / Views / Workout / Workout\n//\n\n\nexport default function Workout ( props ) {\n\tconst { id } = props;\n\tconst { data, loading } = useSubscription( Queries.workouts.subscribe, { variables: { id }});\n\tconst [ removeWorkout ] = useMutation( Queries.workouts.deleteWorkout, { refetchQueries: [{ query: Queries.workouts.getAll }], awaitRefetchQueries: true });\n\tconst [ removeVersion ] = useMutation( Queries.workouts.deleteVersion, { refetchQueries: [{ query: Queries.workouts.getOne, variables: { id }}], awaitRefetchQueries: true });\n\tconst { openPanel } = useContext( Services.UI );\n\tconst [ selectedVersion, setSelectedVersion ] = useState();\n\tconst { intensityOptions, workoutTypes } = constants;\n\tconst history = useHistory();\n\n\tconst title = _.get( data, \"workouts_by_pk.title\" );\n\tconst typesValue = _.get( data, \"workouts_by_pk.type\" );\n\tconst intensityValue = _.get( data, \"workouts_by_pk.intensity\" );\n\tconst versions = _.get( data, \"workouts_by_pk.versions\" );\n    \n\t// eslint-disable-next-line\n\tuseEffect(() => { if ( !selectedVersion ) setSelectedVersion( _.get( _.last( versions ), \"version_num\" ));}, [ versions ]);\n\n\tif ( loading ) return <Loading />;\n\n\tconst version = _.find( versions, [ \"version_num\", selectedVersion ]);\n\tconst body = _.get( version, \"body\", \"\" );\n\tconst stats = _.get( version, \"stats\", {});\n\tconst drills = _.map( _.get( version, \"drills\", []), \"drill\" );\n\n\tconst intensity = _.get( _.find( intensityOptions, [ \"value\", intensityValue ]), \"label\", \"\" );\n\tconst type = _.get( _.find( workoutTypes, [ \"value\", typesValue ]), \"label\", \"\" );\n\n\tconst _handleWorkoutDelete = async () => {\n\t\tawait removeWorkout({ variables: { id }});\n\t\thistory.push( \"/workouts\" );\n\t};\n    \n\tconst _handleVersionDelete = async () => {\n\t\tawait removeVersion({ variables: { id:  _.get( version, \"id\" ) }});\n\t\tsetSelectedVersion( _.get( _.last( versions ), \"version_num\" ));\n\t};\n    \n\tconst _handleVersionAdd = id => setSelectedVersion( _.get( _.find( versions, [ \"id\", id ]), \"version_num\" ));\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button marginLeft={ 8 } iconBefore=\"plus\" onClick={ () => openPanel({ panel: \"workouts/add-version\", props: { id: version.id, workoutId: id, emit: _handleVersionAdd }, size: \"wide\" })}>Add Version</Button>\n\t\t\t\t<Button marginLeft={ 8 } iconBefore=\"edit\" onClick={ () => openPanel({ panel: \"workouts/edit\", props: { id: version.id }, size: \"wide\" })}>Edit</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 } display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n\t\t\t\t<Pane marginRight={ 16 }>\n\t\t\t\t\t<Heading>{ title }</Heading>\n\t\t\t\t</Pane>\n\t\t\t\t<Pane flex={ 1 }>\n\t\t\t\t\t<Badge marginRight={ 8 } color=\"blue\">{ type }</Badge>\n\t\t\t\t\t<Badge color=\"blue\">{ intensity }</Badge>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t\t<Pane display=\"flex\" flexDirection=\"row\" alignItems=\"center\" marginBottom={ 24 }>\n\t\t\t\t<Text>Versions:</Text>\n\t\t\t\t<Pane flex={ 1 } marginLeft={ 16 }>\n\t\t\t\t\t<Tablist alignItems=\"center\">\n\t\t\t\t\t\t{ versions && _.map( versions, ({ version_num }) => (\n\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\tkey={ version_num }\n\t\t\t\t\t\t\t\tid={ version_num }\n\t\t\t\t\t\t\t\tonSelect={ () => setSelectedVersion( version_num ) }\n\t\t\t\t\t\t\t\tisSelected={ selectedVersion === version_num }\n\t\t\t\t\t\t\t\taria-controls={ `panel-${ version_num }` }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ version_num }\n\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Tablist>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t\t<Pane background=\"white\" padding={ 32 } marginBottom={ 32 } elevation={ 1 }>\n\t\t\t\t<Heading marginBottom={ 16 } size={ 200 }>Description:</Heading>\n\t\t\t\t{ body && _.map( body.split( \"\\n\" ), ( line, i ) => line ? <Paragraph key={ i }>{ line }</Paragraph> : <br key={ i } /> )}\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 }>\n\t\t\t\t<Heading size={ 200 } marginBottom={ 16 }>Drills:</Heading>\n\t\t\t\t{ !_.isEmpty( drills ) ? _.map( drills, drill => {\n\t\t\t\t\tconst { id, title } = drill;\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<Link to={ `/admin/drills/${ id }` } key={ id } style={{ marginBottom: \"24px\" }}>\n\t\t\t\t\t\t\t<Pane display=\"flex\" elevation={ 1 } height={ 48 } alignItems=\"center\" background=\"white\" marginBottom={ 16 }>\n\t\t\t\t\t\t\t\t<Text marginLeft={ 24 }>{ title }</Text> \n\t\t\t\t\t\t\t</Pane> \n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t}) : <Paragraph>No attached drills</Paragraph> }\n\t\t\t</Pane>\n\t\t\t<Pane background=\"white\" padding={ 32 } elevation={ 1 } marginBottom={ 24 }>\n\t\t\t\t<Heading size={ 200 }>Workout Minutes:</Heading>\n\t\t\t\t<Pane height={ 225 }>\n\t\t\t\t\t<WorkoutMinutesSplit stats={ stats } />\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\" marginBottom={ 32 }>\n\t\t\t\t<Button intent=\"danger\" appearance=\"minimal\" onClick={ _handleVersionDelete } marginRight={ 24 }>Delete This Version</Button>\n\t\t\t\t<Button intent=\"danger\" appearance=\"minimal\" onClick={ _handleWorkoutDelete }>Delete This Workout</Button>\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\nWorkout.propTypes = {\n\tid: PropTypes.string,\n};\n\n\nconst WorkoutMinutesSplit = memo( function WorkoutMinutesSplit ({ stats }) {\n\tconst graphData = _.map([ \"short\", \"long\" ], id => ({\n\t\tid: id === \"short\" ? \"5/10km\" : \"half/ultra\",\n\t\tbeginner: _.get( stats, `running_minutes_beginner_${ id }` ),\n\t\tintermediate: _.get( stats, `running_minutes_intermediate_${ id }` ),\n\t\tadvanced: _.get( stats, `running_minutes_advanced_${ id }` ),\n\t}));\n    \n\treturn (\n\t\t<ResponsiveBar\n\t\t\tdata={ graphData }\n\t\t\tmargin={{ top: 16, right: 16, bottom: 32, left: 64 }}\n\t\t\tinnerPadding={ 2 }\n\t\t\tkeys={[ \"beginner\", \"intermediate\", \"advanced\" ]}\n\t\t\tlayout=\"horizontal\"\n\t\t\tgroupMode=\"grouped\"\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tjustify={ true }\n\t\t\taxisTop={ null }\n\t\t\taxisRight={ null }\n\t\t\taxisBottom={ null }\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t}}\n\t\t\tisInteractive={ false }\n\t\t\tenableGridY={ false }\n\t\t\tlegends={[\n\t\t\t\t{\n\t\t\t\t\tdataFrom: \"keys\",\n\t\t\t\t\tanchor: \"bottom\",\n\t\t\t\t\tdirection: \"row\",\n\t\t\t\t\ttranslateX: 0,\n\t\t\t\t\ttranslateY: 32,\n\t\t\t\t\titemWidth: 128,\n\t\t\t\t\titemHeight: 16,\n\t\t\t\t\titemDirection: \"left-to-right\",\n\t\t\t\t\tsymbolSize: 16,\n\t\t\t\t},\n\t\t\t]}\n\t\t/>\n\t);\n}, _.isEqual );\nWorkoutMinutesSplit.propTypes = {\n\tstats: PropTypes.object,\n};\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\n// app\nimport { Badge, Pane, Text, Heading, Button } from \"evergreen-ui\";\nimport { Services, Queries, Loading, constants } from \"../index\";\n\n//\n// Adultletics Admin / Views / Workouts / Workouts\n//\n\n\nexport default function Workouts () {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { data, loading } = useQuery( Queries.workouts.getAll );\n\tconst workouts = _.get( data, \"workouts\" );\n\tconst { intensityOptions, workoutTypes } = constants;\n\n\tif ( loading ) return <Loading />;\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"plus\" onClick={ () => openPanel({ panel: \"workouts/add\", size: \"wide\" })}>Add</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 16 }>\n\t\t\t\t<Heading>All Workouts:</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 40 }>\n\t\t\t\t{ workouts && _.map( workouts, workout => {\n\t\t\t\t\tconst { id, title, intensity, type } = workout;\n\t\t\t\t\tconst intensityLabel = _.get( _.find( intensityOptions, [ \"value\", intensity ]), \"label\", \"\" );\n\t\t\t\t\tconst typeLabel = _.get( _.find( workoutTypes, [ \"value\", type ]), \"label\", \"\" );\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<Link to={ `/admin/workouts/${ id }` } key={ id } style={{ marginBottom: \"24px\", width: \"100%\" }}>\n\t\t\t\t\t\t\t<Pane className=\"c-row-hover\" display=\"flex\" elevation={ 1 } height={ 48 } alignItems=\"center\" background=\"white\" marginBottom={ 16 } >\n\t\t\t\t\t\t\t\t<Pane flex={ 1 } >\n\t\t\t\t\t\t\t\t\t<Text marginLeft={ 24 } marginRight={ 8 }>{ title }</Text> \n\t\t\t\t\t\t\t\t\t<Badge marginRight={ 8 } color=\"blue\">{ typeLabel }</Badge>\n\t\t\t\t\t\t\t\t\t<Badge color=\"blue\">{ intensityLabel }</Badge>\n\t\t\t\t\t\t\t\t</Pane> \n\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t</Link>\n\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading } from \"evergreen-ui\";\nimport Workout from \"./workout\";\nimport Workouts from \"./workouts\";\n\n//\n// Adultletics Admin / Views / Workouts / Index\n//\n\n\nexport default function WorkoutsIndex () {\n\tconst { id } = useParams();\n\tconst _workoutView = Boolean( id );\n    \n\treturn (\n\t\t<>\n\t\t\t<Pane>\n\t\t\t\t<Heading size={ 800 } color=\"#1070CA\" marginBottom={ 48 }>Workouts</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ _workoutView ? <Workout id={ id } /> : <Workouts /> }\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React, { useContext, memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSubscription, useMutation, useQuery } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\nimport { format, parseISO } from \"date-fns\";\nimport { Document, Paragraph as DocXParagraph, HeadingLevel, Packer } from \"docx\";\nimport { save } from \"save-file\";\nimport { Formik } from \"formik\";\nimport { ResponsiveBar } from \"@nivo/bar\";\n\n// app\nimport { SelectField, Pane, Text, Paragraph, Heading, Badge, IconButton, Button } from \"evergreen-ui\";\nimport { Queries, Loading, Services, constants } from \"../index\";\n\n//\n// Adultletics Admin / Views / Week / Week\n//\n\n\nexport default function Week ( props ) {\n\tconst { id } = props;\n\tconst { workoutTypes } = constants;\n\tconst { data, loading } = useSubscription( Queries.weeks.subscribe, { variables: { id }});\n\tconst { data: challengesData, loading: challengesLoading } = useQuery( Queries.dailyChallenges.getAll );\n\tconst [ updateWeek ] = useMutation( Queries.weeks.updateWeek );\n\tconst { openPanel } = useContext( Services.UI );\n\n\tif ( loading || challengesLoading ) return <Loading />;\n    \n\tconst week = _.get( data, \"weeks_by_pk\" );\n\tconst { title, updated_at, days, id: weekId } = week;\n    \n\tconst workouts = _.compact( _.map( days, \"workout\" ));    \n\tconst stats = _.compact( _.map( days, \"workout.stats\" ));\n\n\tconst challenge = _.get( week, \"daily_challenges.id\", \"\" );\n\tconst challenges = _.get( challengesData, \"daily_challenges\", []);\n\tconst challengeSelectOptions = _.map( challenges, ({ id, title }) => ({ value: id, label: title }));\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button marginLeft={ 8 } iconBefore=\"arrow-down\" onClick={ e => _handleDownload( week, e ) }>Download DOCX</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 } display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n\t\t\t\t<Pane marginRight={ 16 }>\n\t\t\t\t\t<Heading>{ title }</Heading>\n\t\t\t\t</Pane>\n\t\t\t\t<Pane flex={ 1 }>\n\t\t\t\t\t<Text>Last updated: <Badge color=\"blue\">{ format( parseISO( updated_at ), \"dd MMM yyyy @ h:mm a\" ).replace( \"@\", \"at\" ) }</Badge></Text>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 } >\n\t\t\t\t<Formik\n\t\t\t\t\tinitialValues={{ challenge: _.isNull( challenge ) ? \"\" : challenge }}\n\t\t\t\t\tonSubmit={ async ({ challenge }) => {\n\t\t\t\t\t\tconsole.log( challenge );\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait updateWeek({ variables: { id, data: { _challenge: challenge }}});\n\t\t\t\t\t\t} catch ( error ) {\n\t\t\t\t\t\t\tconsole.error( error );\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tenableReinitialize={ true }\n\t\t\t\t>{\n\t\t\t\t\t\t({ values, handleSubmit, handleChange }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<form>\n\t\t\t\t\t\t\t\t\t\t<Pane display=\"flex\" width=\"50%\" flexDirection=\"row\" alignItems=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t<SelectField flex={ 1 } label=\"Add a challenge\" name=\"challenge\" value={ values.challenge } onChange={ e => {\n\t\t\t\t\t\t\t\t\t\t\t\thandleChange( e );\n\t\t\t\t\t\t\t\t\t\t\t\thandleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t}} height={ 40 }>\n\t\t\t\t\t\t\t\t\t\t\t\t<option key=\"empty\" value=\"\">Please select one...</option>\n\t\t\t\t\t\t\t\t\t\t\t\t{ challengeSelectOptions && _.map( challengeSelectOptions, ({ value, label }) => ( \n\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={ value } value={ value }>{ label }</option> \n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t</SelectField>\n\t\t\t\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t\t\t\t</form> \n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t</Formik>\n\t\t\t</Pane>\n\t\t\t<Pane display=\"flex\" justifyContent=\"space-between\" marginBottom={ 32 }>\n\t\t\t\t{ days && _.map( days, day => {\n\t\t\t\t\tconst { id, day: { title }, workout } = day;\n\t\t\t\t\tconst workoutTitle = _.get( workout, \"workout.title\" );\n\t\t\t\t\tconst workoutVersion = _.get( workout, \"version_num\" );\n\t\t\t\t\tconst workoutVersionId = _.get( workout, \"id\", \"\" );\n\t\t\t\t\tconst type = _.get( workout, \"workout.type\" );\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Pane key={ id } elevation={ 1 } width=\"12%\" background=\"white\" paddingLeft={ 16 } paddingBottom={ 16 }>\n\t\t\t\t\t\t\t<Pane display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-end\" marginBottom={ 8 }>\n\t\t\t\t\t\t\t\t<Heading size={ 200 }>{ title }</Heading>\n\t\t\t\t\t\t\t\t<IconButton icon=\"small-plus\" appearance=\"minimal\" onClick={ () => openPanel({ panel: \"weeks/update-workout\", props: { id, title, weekId }, size: \"wide\" })} />\n\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t\t<Pane paddingRight={ 16 }>\n\t\t\t\t\t\t\t\t{ _.isEmpty( workout ) ? \n\t\t\t\t\t\t\t\t\t<Text color='red'>No workout chosen</Text> : \n\t\t\t\t\t\t\t\t\t<div onClick={ () => openPanel({ panel: \"weeks/view-workout-version\", props: { id: workoutVersionId }, size: \"wide\" })}>\n\t\t\t\t\t\t\t\t\t\t<Paragraph marginBottom={ 8 }>{ workoutTitle } - v{ workoutVersion }</Paragraph>\n\t\t\t\t\t\t\t\t\t\t<Badge color=\"blue\">{ _.get( _.find( workoutTypes, [ \"value\", type ]), \"label\" ) }</Badge>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 40 }>\n\t\t\t\t<Heading marginBottom={ 8 }>Stats:</Heading>\n\t\t\t\t<Pane display=\"flex\" justifyContent=\"space-between\">\n\t\t\t\t\t<Pane background=\"white\" padding={ 32 } elevation={ 1 } marginBottom={ 24 } width=\"45%\">\n\t\t\t\t\t\t<Heading size={ 200 }>Workout Minutes:</Heading>\n\t\t\t\t\t\t<Pane height={ 250 }>\n\t\t\t\t\t\t\t<WeeksMinutesSplit stats={ stats } />\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t</Pane>\n\t\t\t\t\t<Pane background=\"white\" padding={ 32 } elevation={ 1 } marginBottom={ 24 } width=\"45%\">\n\t\t\t\t\t\t<Heading size={ 200 }>Energy Systems:</Heading>\n\t\t\t\t\t\t<Pane height={ 250 }>\n\t\t\t\t\t\t\t<EnergySystemSplit workouts={ workouts } />\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t</Pane>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\nWeek.propTypes = {\n\tid: PropTypes.string,\n};\n\nconst _handleDownload = ( week, e ) => {\n\te.preventDefault();\n\n\tconst { title, days, daily_challenge } = week;    \n\tconst doc = new Document();\n\n\tconst children = [ new DocXParagraph({ text: title, heading: HeadingLevel.HEADING_1 }) ];\n\n\tif ( daily_challenge && !_.isEmpty( daily_challenge )) {\n\t\t//add challenge to word doc\n\t}\n\n\t_.forEach( days, day => {\n\t\tconst title = _.get( day, \"day.title\", \"\" );\n\t\tconst workout = _.get( day, \"workout\", []);\n\t\tconst drills = _.compact( _.get( day, \"workout.drills\", []));\n    \n\t\tchildren.push( new DocXParagraph({ text: title, heading: HeadingLevel.HEADING_3, spacing: { before: 300 }}));\n    \n\t\tif ( _.isEmpty( workout )) { \n\t\t\tchildren.push( new DocXParagraph({ text: \"Nothing assigned today, rest day!\" }));\n\t\t} else {\n\t\t\tif ( !_.isEmpty( drills )) {\n\t\t\t\tconst drillsText = _.map( drills, ({ drill: { title, url }}) => new DocXParagraph({ text: `${ title }: ${ url }`, bullet: { level: 0 }}));\n\t\t\t\tchildren.push( new DocXParagraph({ text: \"Please perform the following drills:\", heading: HeadingLevel.HEADING_4 }));\n\t\t\t\tchildren.push( ...drillsText );\n\t\t\t}\n\t\t\tchildren.push( new DocXParagraph({ text: workout.body }));\n\t\t}\n\t});\n    \n\tdoc.addSection({ children });\n\tPacker.toBlob( doc ).then( blob => save( blob, `${ title }.docx` ));\n};\n\nconst EnergySystemSplit = memo( function EnergySystemSplit ({ workouts }) {\n\tconst { workoutTypes } = constants;\n\tconst allEnergySystems =  _.uniq( _.map( workoutTypes, \"system\" )).sort();\n\tconst workoutsEnergySystemMap = _.map( workouts, workout => _.get( _.find( workoutTypes, [ \"value\", _.get( workout, \"workout.type\" ) ]), \"system\" ));\n\tconst graphData = _.map( allEnergySystems, system => ({ id: _.capitalize( _.nth( system.split( \" \" ), 1 )), value: _.size( _.filter( workoutsEnergySystemMap, el => el === system )) }));\n\n\treturn (\n\t\t<ResponsiveBar\n\t\t\tdata={ graphData }\n\t\t\tmargin={{ top: 16, right: 16, bottom: 16, left: 72 }}\n\t\t\tlayout=\"horizontal\"\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tcolorBy=\"index\"\n\t\t\tjustify={ true }\n\t\t\taxisTop={ null }\n\t\t\taxisRight={ null }\n\t\t\taxisBottom={ null }\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t}}\n\t\t\tisInteractive={ false }\n\t\t\tenableGridY={ false }\n\t\t/>\n\t);\n}, _.isEqual );\nEnergySystemSplit.propTypes = {\n\tworkouts: PropTypes.array,\n};\n\nconst WeeksMinutesSplit = memo( function WeeksMinutesSplit ({ stats }) {\n\n\tconst graphData = _.map([ \"short\", \"long\" ], id => ({\n\t\tid: id === \"short\" ? \"5/10km\" : \"half/ultra\",\n\t\tbeginner: _.reduce( stats, ( total, curr ) => _.isNull( _.get( curr, `running_minutes_beginner_${ id }`, 0 )) ? total : total + _.get( curr, `running_minutes_beginner_${ id }`, 0 ), 0 ),\n\t\tintermediate: _.reduce( stats, ( total, curr ) => _.isNull( _.get( curr, `running_minutes_intermediate_${ id }`, 0 )) ? total : total + _.get( curr, `running_minutes_intermediate_${ id }`, 0 ), 0 ),\n\t\tadvanced: _.reduce( stats, ( total, curr ) => _.isNull( _.get( curr, `running_minutes_advanced_${ id }`, 0 )) ? total : total + _.get( curr, `running_minutes_advanced_${ id }`, 0 ), 0 ),\n\t}));\n    \n\treturn (\n\t\t<ResponsiveBar\n\t\t\tdata={ graphData }\n\t\t\tmargin={{ top: 16, right: 16, bottom: 32, left: 64 }}\n\t\t\tinnerPadding={ 2 }\n\t\t\tkeys={[ \"beginner\", \"intermediate\", \"advanced\" ]}\n\t\t\tlayout=\"horizontal\"\n\t\t\tgroupMode=\"grouped\"\n\t\t\tcolors={{ scheme: \"category10\" }}\n\t\t\tjustify={ true }\n\t\t\taxisTop={ null }\n\t\t\taxisRight={ null }\n\t\t\taxisBottom={ null }\n\t\t\taxisLeft={{\n\t\t\t\ttickSize: 5,\n\t\t\t\ttickPadding: 5,\n\t\t\t\ttickRotation: 0,\n\t\t\t\tlegendPosition: \"middle\",\n\t\t\t\tlegendOffset: -40,\n\t\t\t}}\n\t\t\tisInteractive={ false }\n\t\t\tenableGridY={ false }\n\t\t\tlegends={[\n\t\t\t\t{\n\t\t\t\t\tdataFrom: \"keys\",\n\t\t\t\t\tanchor: \"bottom\",\n\t\t\t\t\tdirection: \"row\",\n\t\t\t\t\ttranslateX: 0,\n\t\t\t\t\ttranslateY: 32,\n\t\t\t\t\titemWidth: 128,\n\t\t\t\t\titemHeight: 16,\n\t\t\t\t\titemDirection: \"left-to-right\",\n\t\t\t\t\tsymbolSize: 16,\n\t\t\t\t},\n\t\t\t]}\n\t\t/>\n\t);\n}, _.isEqual );\nWeeksMinutesSplit.propTypes = {\n\tstats: PropTypes.array,\n};\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { differenceInCalendarDays, parseISO } from \"date-fns\";\n\n// app\nimport { Pane, Text, Heading, Button, Badge } from \"evergreen-ui\";\nimport { Services, Queries, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Weeks / Weeks\n//\n\n\nconst now = new Date();\n\nexport default function Weeks () {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { data, loading } = useQuery( Queries.weeks.getAll );\n\tconst weeks = [ ..._.get( data, \"weeks\", []) ].sort(( a, b ) => parseISO( b.week_start ) - parseISO( a.week_start ));\n\n\tif ( loading ) return <Loading />;\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"plus\" onClick={ () => openPanel({ panel: \"weeks/add\" })}>Add</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 16 }>\n\t\t\t\t<Heading>All Weeks:</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 40 }>\n\t\t\t\t{ weeks && _.map( weeks, workout => {\n\t\t\t\t\tconst { id, title, week_start } = workout;\n\t\t\t\t\tconst age = differenceInCalendarDays( now, parseISO( week_start ));\n\t\t\t\t\tconst background = age >= 7 ? \"#FEF6F6\" : \"white\";\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<Link to={ `/admin/weeks/${ id }` } key={ id } style={{ marginBottom: \"24px\" }}>\n\t\t\t\t\t\t\t<Pane className=\"c-row-hover\" display=\"flex\" elevation={ 1 } height={ 48 } alignItems=\"center\" background={ background } marginBottom={ 16 }>\n\t\t\t\t\t\t\t\t<Text marginLeft={ 24 } marginRight={ 16 }>{ title }</Text> \n\t\t\t\t\t\t\t\t{ ( age >= 0 && age < 7 ) && <Badge color=\"green\">Current</Badge> }\n\t\t\t\t\t\t\t</Pane> \n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading } from \"evergreen-ui\";\nimport Week from \"./week\";\nimport Weeks from \"./weeks\";\n\n//\n// Adultletics Admin / Views / Weeks / Index\n//\n\n\nexport default function WeeksIndex () {\n\tconst { id } = useParams();\n\tconst _weekView = Boolean( id );\n    \n\treturn (\n\t\t<>\n\t\t\t<Pane>\n\t\t\t\t<Heading size={ 800 } color=\"#1070CA\" marginBottom={ 48 }>Weeks</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ _weekView ? <Week id={ id } /> : <Weeks /> }\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\n\n// app\nimport { Button, Pane, Heading, Text, Paragraph, Link } from \"evergreen-ui\";\nimport { Services, Queries, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Drills / Drill\n//\n\n\nexport default function Drill ( props ) {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { id } = props;\n\tconst { data, loading } = useQuery( Queries.drills.getOne, { variables: { id }});\n\n\tif ( loading ) return <Loading />;\n\n\tconst drill = _.get( data, \"drills_by_pk\", {});\n\tconst title = _.get( drill, \"title\" );\n\tconst description = _.get( drill, \"description\" );\n\tconst url = _.get( drill, \"url\" );\n\tconst embed_url = `https://www.youtube.com/embed/${ _.trim( url ).substring( _.size( url ) - 11, _.size( url )) }`;\n\tconst workouts = _.get( drill, \"workouts_drills\", []);\n\tconst workoutsCount = _.size( workouts );\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"edit\" onClick={ () => openPanel({ panel: \"drills/edit\", props: { id }})}>Edit</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 } display=\"flex\">\n\t\t\t\t<Heading marginRight={ 16 }>{ title }</Heading>\n\t\t\t\t{ url && <Link href={ url } target=\"_blank\" rel=\"noreferrer noopener\">{ url }</Link> }\n\t\t\t</Pane>\n\t\t\t<Pane display=\"flex\">\n\t\t\t\t<Pane flex={ 1 } marginRight={ 32 } >\n\t\t\t\t\t{ description && \n\t\t\t\t\t\t<Pane background=\"white\" padding={ 32 }  marginBottom={ 32 } elevation={ 1 }>\n\t\t\t\t\t\t\t<Paragraph>{ description }</Paragraph>\n\t\t\t\t\t\t</Pane> \n\t\t\t\t\t}\n\t\t\t\t\t<Pane background=\"white\" padding={ 32 }  marginBottom={ 32 } elevation={ 1 }>\n\t\t\t\t\t\t<Text>Appears in <strong>{ workoutsCount }</strong> workouts</Text>\n\t\t\t\t\t</Pane>\n\t\t\t\t</Pane>\n\t\t\t\t{ embed_url && <Pane elevation={ 1 } height={ 315 } width={ 560 }>\n\t\t\t\t\t<iframe width=\"560\" height=\"315\" src={ embed_url } title={ title } frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n\t\t\t\t</Pane> }\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\nDrill.propTypes = {\n\tid: PropTypes.string,\n};\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading, Text, Button } from \"evergreen-ui\";\nimport { Services, Queries, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Drills / Drills\n//\n\n\nexport default function Drills () {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { data, loading } = useQuery( Queries.drills.getAll );\n\tconst drills = _.get( data, \"drills\" );\n\n\tif ( loading ) return <Loading />;\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"plus\" onClick={ () => openPanel({ panel: \"drills/add\" })}>Add</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 16 }>\n\t\t\t\t<Heading>All Drills:</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ drills && _.map( drills, drill => {\n\t\t\t\t\tconst { id, title } = drill;\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<Link to={ `/admin/drills/${ id }` } key={ id } style={{ marginBottom: \"24px\" }}>\n\t\t\t\t\t\t\t<Pane className=\"c-row-hover\" display=\"flex\" elevation={ 1 } height={ 48 } alignItems=\"center\" background=\"white\" marginBottom={ 16 }>\n\t\t\t\t\t\t\t\t<Text marginLeft={ 24 }>{ title }</Text> \n\t\t\t\t\t\t\t</Pane> \n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading } from \"evergreen-ui\";\nimport Drill from \"./drill\";\nimport Drills from \"./drills\";\n\n//\n// Adultletics Admin / Views / Weeks / Index\n//\n\n\nexport default function DrillsIndex () {\n\tconst { id } = useParams();\n\tconst _drillView = Boolean( id );\n    \n\treturn (\n\t\t<>\n\t\t\t<Pane>\n\t\t\t\t<Heading size={ 800 } color=\"#1070CA\" marginBottom={ 48 }>Drills</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ _drillView ? <Drill id={ id } /> : <Drills /> }\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\n\n// app\nimport { Button, Pane, Heading, Text, Paragraph } from \"evergreen-ui\";\nimport { Services, Queries, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Challenges / Challenge\n//\n\n\nexport default function Challenge ( props ) {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { id } = props;\n\tconst { data, loading } = useQuery( Queries.dailyChallenges.getOne, { variables: { id }});\n\n\tif ( loading ) return <Loading />;\n\n\tconst challenge = _.get( data, \"daily_challenges_by_pk\", {});\n\tconst title = _.get( challenge, \"title\" );\n\tconst description = _.get( challenge, \"description\" );\n\tconst weeks = _.get( challenge, \"workouts_drills\", []);\n\tconst weeksCount = _.size( weeks );\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"edit\" onClick={ () => openPanel({ panel: \"daily-challenges/edit\", props: { id }})}>Edit</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 32 } display=\"flex\">\n\t\t\t\t<Heading marginRight={ 16 }>{ title }</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane display=\"flex\">\n\t\t\t\t<Pane flex={ 1 } marginRight={ 32 } >\n\t\t\t\t\t{ description && \n\t\t\t\t\t\t<Pane background=\"white\" padding={ 32 }  marginBottom={ 32 } elevation={ 1 }>\n\t\t\t\t\t\t\t<Paragraph>{ description }</Paragraph>\n\t\t\t\t\t\t</Pane> \n\t\t\t\t\t}\n\t\t\t\t\t<Pane background=\"white\" padding={ 32 }  marginBottom={ 32 } elevation={ 1 }>\n\t\t\t\t\t\t<Text>Appears in <strong>{ weeksCount }</strong> weeks</Text>\n\t\t\t\t\t</Pane>\n\t\t\t\t</Pane>\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\nChallenge.propTypes = {\n\tid: PropTypes.string,\n};\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport _ from \"lodash\";\nimport { Link } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading, Text, Button } from \"evergreen-ui\";\nimport { Services, Queries, Loading } from \"../index\";\n\n//\n// Adultletics Admin / Views / Challenges / Challenges\n//\n\n\nexport default function Challenges () {\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { data, loading } = useQuery( Queries.dailyChallenges.getAll );\n\tconst daily_challenges = _.get( data, \"daily_challenges\" );\n\n\tif ( loading ) return <Loading />;\n\n\treturn (\n\t\t<>\n\t\t\t<Pane display=\"flex\" justifyContent=\"flex-end\">\n\t\t\t\t<Button iconBefore=\"plus\" onClick={ () => openPanel({ panel: \"daily-challenges/add\" })}>Add</Button>\n\t\t\t</Pane>\n\t\t\t<Pane marginBottom={ 16 }>\n\t\t\t\t<Heading>All Daily Challenges:</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ daily_challenges && _.map( daily_challenges, drill => {\n\t\t\t\t\tconst { id, title } = drill;\n\t\t\t\t\treturn ( \n\t\t\t\t\t\t<Link to={ `/admin/challenges/${ id }` } key={ id } style={{ marginBottom: \"24px\" }}>\n\t\t\t\t\t\t\t<Pane className=\"c-row-hover\" display=\"flex\" elevation={ 1 } height={ 48 } alignItems=\"center\" background=\"white\" marginBottom={ 16 }>\n\t\t\t\t\t\t\t\t<Text marginLeft={ 24 }>{ title }</Text> \n\t\t\t\t\t\t\t</Pane> \n\t\t\t\t\t\t</Link>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// app\nimport { Pane, Heading } from \"evergreen-ui\";\nimport Challenge from \"./challenge\";\nimport Challenges from \"./challenges\";\n\n//\n// Adultletics Admin / Views / Challenges / Index\n//\n\n\nexport default function DrillsIndex () {\n\tconst { id } = useParams();\n\tconst _drillView = Boolean( id );\n    \n\treturn (\n\t\t<>\n\t\t\t<Pane>\n\t\t\t\t<Heading size={ 800 } color=\"#1070CA\" marginBottom={ 48 }>Daily Challenges</Heading>\n\t\t\t</Pane>\n\t\t\t<Pane>\n\t\t\t\t{ _drillView ? <Challenge id={ id } /> : <Challenges /> }\n\t\t\t</Pane>\n\t\t</>\n\t);\n}\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { Avatar, Pane, Heading, Text, Button, Tablist, Tab } from \"evergreen-ui\";\nimport _ from \"lodash\";\n\n// app\nimport { Services } from \"../../views/index\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\n//\n// Adultletics Admin / Views / Top Nav / Admin Nav\n//\n\n\nexport default function AdminNav () {\n\tconst history = useHistory();\n\tconst { pathname } = useLocation();\n\tconst { openPanel } = useContext( Services.UI );\n\tconst { isAuthenticated, isAuthenticating, authUser, signOut } = useContext( Services.Auth );\n\n\tconst tabs = [\n\t\t{\n\t\t\tname: \"Dashboard\",\n\t\t\troute: \"/admin\",\n\t\t},\n\t\t{\n\t\t\tname: \"Workouts\",\n\t\t\troute: \"/admin/workouts\",\n\t\t},\n\t\t{\n\t\t\tname: \"Weeks\",\n\t\t\troute: \"/admin/weeks\",\n\t\t},\n\t\t{\n\t\t\tname: \"Drills\",\n\t\t\troute: \"/admin/drills\",\n\t\t},\n\t\t{\n\t\t\tname: \"Daily Challenges\",\n\t\t\troute: \"/admin/challenges\",\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"c-top-nav\">\n\t\t\t<Pane display=\"flex\" height={ 78 } alignItems=\"center\">\n\t\t\t\t<Pane alignItems=\"center\" justifyContent=\"center\">\n\t\t\t\t\t<Heading size={ 200  }>Adultletics Employee Dashboard</Heading>\n\t\t\t\t</Pane>\n\t\t\t\t{ isAuthenticated ?\n\t\t\t\t\t<Pane display=\"flex\" flex={ 1 } justifyContent=\"space-between\" paddingLeft={ 16 }>\n\t\t\t\t\t\t<Pane display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Tablist alignItems=\"center\">\n\t\t\t\t\t\t\t\t{ _.map( tabs, ({ name, route }) => (\n\t\t\t\t\t\t\t\t\t<Tab\n\t\t\t\t\t\t\t\t\t\tkey={ route }\n\t\t\t\t\t\t\t\t\t\tid={ route }\n\t\t\t\t\t\t\t\t\t\tonSelect={ () => history.push( route ) }\n\t\t\t\t\t\t\t\t\t\tisSelected={ route === \"/admin\" ? pathname === route : pathname.startsWith( route ) }\n\t\t\t\t\t\t\t\t\t\taria-controls={ `panel-${ name }` }\n\t\t\t\t\t\t\t\t\t\theight={ 40 }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ name }\n\t\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Tablist>\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t<Pane display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Button marginRight={ 16 } onClick={ signOut }>Log Out</Button>\n\t\t\t\t\t\t\t<Avatar name={ authUser.first_name } size={ 40 } />\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t</Pane> \n\t\t\t\t\t: \n\t\t\t\t\t<Pane display=\"flex\" flex={ 1 } justifyContent=\"space-between\" paddingLeft={ 16 }>\n\t\t\t\t\t\t<Pane display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t{ isAuthenticating ? <></> : <Text color=\"red\">You must log in to continue</Text> } \n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t\t<Pane display=\"flex\" alignItems=\"center\">\n\t\t\t\t\t\t\t<Button isLoading={ isAuthenticating } marginRight={ 16 } onClick={ () => openPanel({ panel: \"auth/sign-in\" }) }>Log In</Button> \n\t\t\t\t\t\t\t<Avatar name={ authUser.first_name } size={ 40 } />\n\t\t\t\t\t\t</Pane>\n\t\t\t\t\t</Pane> \n\t\t\t\t}\n\t\t\t</Pane>\n\t\t</div>\n\t);\n}\n","\n// deps\nimport React, { useContext } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n// import { toaster } from \"evergreen-ui\";\n\n//app\nimport \"./index.scss\";\nimport Dashboard from \"./dashboard/dashboard\";\nimport WorkoutsIndex from \"./workouts\";\nimport WeeksIndex from \"./weeks\";\nimport DrillsIndex from \"./drills\";\nimport DailyChallengesIndex from \"./daily-challenges\";\nimport Loading from \"../../components/loading/loading\";\nimport Services from \"../../app/services\";\nimport AdminNav from \"../../components/top-nav/admin-nav\";\n\n//\n// Adultletics / Views / Admin / Index \n//\n\nexport default function Admin () {\n\tconst { isAuthenticating, isAuthenticated } = useContext( Services.Auth );\n\t// const { breakpoint } = useContext( Services.UI );\n\t\n\t// useEffect(() => { if ( breakpoint !== \"large\" ) toaster.warning( \"This page is designed for a larger browswer\", { duration: 600 });}, [ breakpoint ]);\n\n\treturn (\n\t\t<>\n\t\t\t<AdminNav />\n\t\t\t{ isAuthenticating && <Loading /> }\n\t\t\t{ ( !isAuthenticating && isAuthenticated ) && \n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/admin/drills/:id?\"><DrillsIndex /></Route>\n\t\t\t\t\t<Route path=\"/admin/workouts/:id?\"><WorkoutsIndex /></Route>\n\t\t\t\t\t<Route path=\"/admin/weeks/:id?\"><WeeksIndex /></Route>\n\t\t\t\t\t<Route path=\"/admin/challenges/:id?\"><DailyChallengesIndex /></Route>\n\t\t\t\t\t<Route path=\"/admin\"><Dashboard /></Route>\n\t\t\t\t</Switch>\n\t\t\t}\n\t\t</>\n\t);\n}\n\nexport { default as Queries } from \"../../app/queries\";\nexport { default as Services } from \"../../app/services\";\nexport { default as Loading } from \"../../components/loading/loading\";\nexport { default as constants } from \"../../base/constants\";\n"],"sourceRoot":""}